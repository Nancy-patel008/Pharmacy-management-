import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

class User {
    String email;
    String password;

    public User(String email, String password) {
        this.email = email;
        this.password = password;
    }

    // User Authentication
    public boolean authenticate(String email, String password) {
        return this.email.equals(email) && this.password.equals(password);
    }
}

class Medicine {
    String name;
    double price;

    public Medicine(String name, double price) {
        this.name = name;
        this.price = price;
    }
}

class Order {
    String medicineName;
    double price;
    String status;

    public Order(String medicineName, double price) {
        this.medicineName = medicineName;
        this.price = price;
        this.status = "Order Placed";
    }

    public void trackOrder() {
        System.out.println("Medicine: " + medicineName + ", Status: " + status);
    }
}

class PharmacySystem {
    // Registered Users
    private HashMap<String, User> users = new HashMap<>();

    // Available Medicines
    private List<Medicine> medicines = new ArrayList<>();

    // Orders placed by users
    private HashMap<String, List<Order>> orders = new HashMap<>();

    // Current logged-in user
    private User loggedInUser = null;

    // Scanner for input
    Scanner scanner = new Scanner(System.in);

    // Constructor to populate medicines
    public PharmacySystem() {
        // Add some default medicines
        medicines.add(new Medicine("Paracetamol", 5.0));
        medicines.add(new Medicine("Ibuprofen", 7.0));
        medicines.add(new Medicine("Aspirin", 6.5));
        medicines.add(new Medicine("Amoxicillin", 12.0));
    }

    // User Registration
    public void register() {
        System.out.print("Enter email: ");
        String email = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        if (users.containsKey(email)) {
            System.out.println("User already exists, please login.");
        } else {
            users.put(email, new User(email, password));
            System.out.println("Registration successful! Please login to continue.");
        }
    }

    // User Login
    public void login() {
        System.out.print("Enter email: ");
        String email = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        if (users.containsKey(email) && users.get(email).authenticate(email, password)) {
            loggedInUser = users.get(email);
            System.out.println("Login successful!");
        } else {
            System.out.println("Invalid credentials, please try again.");
        }
    }

    // View Available Medicines
    public void viewMedicines() {
        System.out.println("Available Medicines:");
        for (int i = 0; i < medicines.size(); i++) {
            Medicine med = medicines.get(i);
            System.out.println((i + 1) + ". " + med.name + " - $" + med.price);
        }
    }

    // Place an Order
    public void orderMedicine() {
        viewMedicines();
        System.out.print("Enter the number of the medicine you want to order: ");
        int choice = scanner.nextInt();
        scanner.nextLine();  // Consume newline

        if (choice > 0 && choice <= medicines.size()) {
            Medicine med = medicines.get(choice - 1);
            System.out.println("You ordered: " + med.name);
            
            // Create an order and store it for the user
            Order order = new Order(med.name, med.price);
            if (!orders.containsKey(loggedInUser.email)) {
                orders.put(loggedInUser.email, new ArrayList<>());
            }
            orders.get(loggedInUser.email).add(order);
            System.out.println("Order placed successfully!");
        } else {
            System.out.println("Invalid selection.");
        }
    }

    // View Past Orders and Track Status
    public void trackOrders() {
        if (orders.containsKey(loggedInUser.email)) {
            List<Order> userOrders = orders.get(loggedInUser.email);
            System.out.println("Your Orders:");
            for (Order order : userOrders) {
                order.trackOrder();
            }
        } else {
            System.out.println("No orders found.");
        }
    }

    // Request Doctor Consultation (Simple message)
    public void requestConsultation() {
        System.out.println("Requesting consultation with a doctor...");
        System.out.println("Doctor will get in touch with you soon.");
    }

    // Main Menu
    public void showMenu() {
        int choice;
        do {
            System.out.println("\n--- Pharmacy Management System ---");
            System.out.println("1. View Medicines");
            System.out.println("2. Order Medicine");
            System.out.println("3. Track Orders");
            System.out.println("4. Request Doctor Consultation");
            System.out.println("5. Logout");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    viewMedicines();
                    break;
                case 2:
                    orderMedicine();
                    break;
                case 3:
                    trackOrders();
                    break;
                case 4:
                    requestConsultation();
                    break;
                case 5:
                    loggedInUser = null;
                    System.out.println("Logged out successfully.");
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        } while (choice != 5 && loggedInUser != null);
    }

    // Entry point for the system
    public void run() {
        int choice;
        do {
            System.out.println("\n--- Pharmacy Management System ---");
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    register();
                    break;
                case 2:
                    login();
                    if (loggedInUser != null) {
                        showMenu();
                    }
                    break;
                case 3:
                    System.out.println("Exiting system. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        } while (choice != 3);
    }
}

// Main class to run the application
public class PharmacyManagementSystem {
    public static void main(String[] args) {
        PharmacySystem system = new PharmacySystem();
        system.run();
    }
}
